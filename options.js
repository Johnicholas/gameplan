// Generated by CoffeeScript 1.6.1
var makeOptionsUIFor, makePlaceButton, makeToolbar, style, tag;

tag = function(name, text) {
  var c, classes, element, id, p, parts, tagName, _i, _j, _len, _len1;
  parts = name.split(/(?=[.#])/);
  tagName = "div";
  classes = [];
  for (_i = 0, _len = parts.length; _i < _len; _i++) {
    p = parts[_i];
    if (p[0] === '#') {
      id = p.substr(1);
    } else if (p[0] === '.') {
      classes.push(p.substr(1));
    } else {
      tagName = p;
    }
  }
  element = document.createElement(tagName);
  if (typeof id !== 'undefined') {
    element.id = id;
  }
  for (_j = 0, _len1 = classes.length; _j < _len1; _j++) {
    c = classes[_j];
    element.classList.add(c);
  }
  if (text) {
    element.textContent = text;
  }
  return element;
};

style = function(el, styles) {
  var prop, val;
  for (prop in styles) {
    val = styles[prop];
    el.style[prop] = val;
  }
  return el;
};

makeOptionsUIFor = function(o) {
  var action, div, els, i, inp, makeRadio, pull, push, resources, sweep, sweepIn, t, title, _i, _j, _len, _len1;
  div = document.createElement('div');
  sweepIn = '50px';
  style(div, {
    position: 'absolute',
    top: '0',
    right: '0',
    margin: '5px',
    padding: '5px',
    fontSize: '18px',
    width: '150px',
    borderRadius: '4px',
    background: 'hsla(205,77%,76%,0.0)',
    border: '2px solid hsla(205,77%,76%,0.0)',
    webkitTransition: '150ms',
    pointerEvents: 'auto',
    lineHeight: '0.8'
  });
  sweep = {
    webkitTransition: '150ms',
    position: 'relative',
    opacity: '0',
    left: sweepIn
  };
  title = tag('div', o.constructor.name);
  style(title, sweep);
  style(title, {
    textDecoration: 'underline',
    marginBottom: '5px'
  });
  makeRadio = function(group, label) {
    var radio, t;
    t = tag('div');
    radio = t.appendChild(tag('input'));
    radio.setAttribute('type', 'radio');
    radio.setAttribute('name', group);
    t.appendChild(tag('label', label));
    return t;
  };
  if (o instanceof Pool) {
    action = tag('div', 'Action:');
    style(action, sweep);
    push = makeRadio('action', 'push');
    style(push, sweep);
    pull = makeRadio('action', 'pull');
    style(pull, sweep);
    if (o.mode === 'pull-any') {
      pull.firstChild.checked = true;
    } else {
      push.firstChild.checked = true;
    }
    push.onclick = pull.onclick = function() {
      return o.mode = push.firstChild.checked ? 'push' : pull.firstChild.checked ? 'pull-any' : void 0;
    };
    resources = tag('div', 'Tokens: ');
    style(resources, sweep);
    inp = resources.appendChild(tag('input'));
    inp.setAttribute('type', 'number');
    inp.value = o.tokens;
    inp.setAttribute('min', '0');
    style(inp, {
      width: '40px',
      background: 'transparent',
      border: '1px solid black',
      font: 'inherit'
    });
    inp.oninput = function(e) {
      var n;
      n = inp.valueAsNumber;
      if (isNaN(n)) {
        n = 0;
      }
      o.tokens = n;
      return draw();
    };
    els = [title, action, push, pull, resources];
  } else {
    els = [title];
  }
  for (_i = 0, _len = els.length; _i < _len; _i++) {
    t = els[_i];
    div.appendChild(t);
  }
  for (i = _j = 0, _len1 = els.length; _j < _len1; i = ++_j) {
    t = els[i];
    t.style.webkitTransitionDelay = i * 20 + 'ms';
  }
  return {
    el: div,
    animateIn: function() {
      var _k, _len2;
      for (_k = 0, _len2 = els.length; _k < _len2; _k++) {
        t = els[_k];
        t.style.opacity = '1';
        t.style.left = '0';
      }
      div.style.background = 'hsla(205,77%,76%,0.2)';
      return div.style.border = '2px solid hsla(205,77%,76%,0.3)';
    },
    animateOut: function() {
      var _k, _len2;
      for (_k = 0, _len2 = els.length; _k < _len2; _k++) {
        t = els[_k];
        t.style.opacity = '0';
        t.style.left = sweepIn;
      }
      div.style.background = 'hsla(205,77%,76%,0.0)';
      div.style.border = '2px solid hsla(205,77%,76%,0.0)';
      return els[0].addEventListener('transitionend', function() {
        return div.remove();
      });
    }
  };
};

makeToolbar = function() {
  var tb;
  tb = tag('div');
  style(tb, {
    width: '-webkit-calc(100% - 14px)',
    position: 'absolute',
    bottom: '0',
    left: '5px',
    background: 'hsla(205,77%,76%,0.4)',
    padding: '2px',
    borderTopLeftRadius: '5px',
    borderTopRightRadius: '5px',
    pointerEvents: 'auto'
  });
  return tb;
};

makePlaceButton = function(name) {
  var b;
  b = tag('button', name);
  style(b, {
    font: 'inherit',
    border: '1px solid black',
    background: 'white',
    borderRadius: '3px'
  });
  return b;
};
